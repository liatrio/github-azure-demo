name: preview-create-update

on:
  pull_request:
    types: [opened, synchronize]

env:
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '3.1.201'
  NODE_VERSION: '12.16.3'

jobs:
  create_update:
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v0.1.0
        with:
          terragrunt_version: 0.23.2
      - name: Terragrunt apply
        run: yes | terragrunt apply-all
        working-directory: ./terraform
        env:
          ARM_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
          ENVIRONMENT: preview
          BRANCH: ${{ github.head_ref }}
          TF_VAR_ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          TF_VAR_ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          TF_VAR_ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      - name: terragrunt output
        run: |
          terragrunt output -json > terraform.output
          echo "##[set-output name=hostname;]$(cat terraform.output | jq -r '.azure_app_hostname.value')"
          echo "##[set-output name=app_name;]$(cat terraform.output | jq -r '.azure_app_name.value')"
        id: output
        working-directory: ./terraform/application
        env:
          ARM_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
          ENVIRONMENT: preview
          BRANCH: ${{ github.head_ref }}
      - name: GitHub Deployment
        uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: "https://${{ steps.output.outputs.hostname }}"
          environment: ${{ github.head_ref }}
          ref: ${{ github.head_ref }}
      - name: yarn build
        run: |
          yarn
          yarn build
          mkdir -p ./src/Conduit/Pages/Shared
          mkdir -p ./src/Conduit/wwwroot
          cp ./dist/Index.cshtml ./src/Conduit/Pages/Shared/Index.cshtml
          cp -r ./dist/static ./src/Conduit/wwwroot
      - name: dotnet build and publish
        run: |
          dotnet run -p build/build.csproj
      - uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: 'Run Azure webapp deploy action'
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.output.outputs.app_name }}
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/publish'
      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: "https://${{ steps.output.outputs.hostname }}"
          environment_url: "https://${{ steps.output.outputs.hostname }}"
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target_url: "https://${{ steps.output.outputs.hostname }}"
          environment_url: "https://${{ steps.output.outputs.hostname }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: PR Comment (Create)
        if: ${{ github.event.action == 'opened' }}
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "Your preview environment has been created! You can find the link for your environment below."
      - name: PR Comment (Update)
        if: ${{ github.event.action == 'synchronize' }}
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "Your preview environment has been updated! Use the same link to view your changes."
    outputs:
      deployment_id: ${{ steps.deployment.outputs.deployment_id }}
